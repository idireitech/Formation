Windows PowerShell
Copyright (C) Microsoft Corporation. Tous droits réservés.

Testez le nouveau système multiplateforme PowerShell https://aka.ms/pscore6

    Répertoire : C:\Users\orsys\Desktop\Formation

Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----       09/03/2020     10:28            147 .editorconfig


PS C:\Users\orsys\Desktop\Formation> git --version
git version 2.16.2.windows.1
PS C:\Users\orsys\Desktop\Formation> git config --global user.name "Idir Menasri"
PS C:\Users\orsys\Desktop\Formation> git config --global user.email "idir.menasri@ei-technologies.com"
Initialized empty Git repository in C:/Users/orsys/Desktop/Formation/.git/
On branch master
No commits yet
Untracked files:


PS C:\Users\orsys\Desktop\Formation> git add .\.editconfig
fatal: pathspec '.\.editconfig' did not match any files
PS C:\Users\orsys\Desktop\Formation> git add .\editconfig 
fatal: pathspec '.\editconfig' did not match any files
PS C:\Users\orsys\Desktop\Formation> git add ./editconfig
fatal: pathspec './editconfig' did not match any files
PS C:\Users\orsys\Desktop\Formation> git add ./.editconfig
fatal: pathspec './.editconfig' did not match any files
PS C:\Users\orsys\Desktop\Formation> git add ../editconfig
fatal: ../editconfig: '../editconfig' is outside repository
PS C:\Users\orsys\Desktop\Formation> git add \editconfig  
fatal: \editconfig: '\editconfig' is outside repository
PS C:\Users\orsys\Desktop\Formation> git commit -m      
error: switch `m' requires a value
usage: git commit [<options>] [--] <pathspec>...

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup <commit>      use autosquash formatted message to fixup specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    -s, --signoff         add Signed-off-by:
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <default>   how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --ahead-behind        compute full ahead/behind values (EXPERIMENTAL)
    --porcelain           machine-readable output
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)
PS C:\Users\orsys\Desktop\Formation> git reset Head --hard
warning: ignoring dangling symref Head.
warning: ignoring dangling symref Head.
fatal: ambiguous argument 'Head': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
PS C:\Users\orsys\Desktop\Formation> git reset Head --hard
warning: ignoring dangling symref Head.
warning: ignoring dangling symref Head.
fatal: ambiguous argument 'Head': unknown revision or path not in the working tree.
'git <command> [<revision>...] -- [<file>...]'
PS C:\Users\orsys\Desktop\Formation> git status -u        
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        .editorconfig

nothing added to commit but untracked files present (use "git add" to track)
PS C:\Users\orsys\Desktop\Formation> git commit -m
error: switch `m' requires a value
usage: git commit [<options>] [--] <pathspec>...

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup <commit>      use autosquash formatted message to fixup specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    -s, --signoff         add Signed-off-by:
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <default>   how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --ahead-behind        compute full ahead/behind values (EXPERIMENTAL)
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
                          show untracked files, optional modes: all, normal, no. (Default: all)

PS C:\Users\orsys\Desktop\Formation> git status -u
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   .editorconfig

PS C:\Users\orsys\Desktop\Formation> git status -u
On branch master


Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   .editorconfig

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   .editorconfig

PS C:\Users\orsys\Desktop\Formation> git commit -m
error: switch `m' requires a value
usage: git commit [<options>] [--] <pathspec>...

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup <commit>      use autosquash formatted message to fixup specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    -s, --signoff         add Signed-off-by:
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <default>   how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --ahead-behind        compute full ahead/behind values (EXPERIMENTAL)
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)

PS C:\Users\orsys\Desktop\Formation> git status -u
On branch master


  (use "git rm --cached <file>..." to unstage)

        new file:   .editorconfig

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   .editorconfig

PS C:\Users\orsys\Desktop\Formation> git log
fatal: your current branch 'master' does not have any commits yet
PS C:\Users\orsys\Desktop\Formation> git commit -m
error: switch `m' requires a value
usage: git commit [<options>] [--] <pathspec>...

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup <commit>      use autosquash formatted message to fixup specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    -s, --signoff         add Signed-off-by:
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <default>   how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --ahead-behind        compute full ahead/behind values (EXPERIMENTAL)
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)

PS C:\Users\orsys\Desktop\Formation> git log
fatal: your current branch 'master' does not have any commits yet
PS C:\Users\orsys\Desktop\Formation> git commit -m
error: switch `m' requires a value
usage: git commit [<options>] [--] <pathspec>...

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup <commit>      use autosquash formatted message to fixup specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    -s, --signoff         add Signed-off-by:
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <default>   how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit and commit-msg hooks
    --dry-run             show what would be committed
    --short               show status concisely
    --ahead-behind        compute full ahead/behind values (EXPERIMENTAL)
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)

PS C:\Users\orsys\Desktop\Formation> git status -u
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   .editorconfig
        new file:   .gitignore

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   .gitignore

PS C:\Users\orsys\Desktop\Formation> git status -u
On branch master
No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   .editorconfig
        new file:   .gitignore

PS C:\Users\orsys\Desktop\Formation> git remote add origin https://github.com/idireitech/Formation.git
PS C:\Users\orsys\Desktop\Formation> git push -u origin master
Counting objects: 4, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 391 bytes | 391.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0)
To https://github.com/idireitech/Formation.git
commit e18850784434e6cf26edd14d8a85931c108a7056 (HEAD -> master, origin/master)
Date:   Mon Mar 9 12:27:17 2020 +0100
PS C:\Users\orsys\Desktop\Formation>




PS C:\Users\orsys\Desktop\Formation> git branch
* master
e188507 (HEAD -> master, origin/master) initial
PS C:\Users\orsys\Desktop\Formation> git log --oneline
PS C:\Users\orsys\Desktop\Formation> git checkout docs/git
Switched to branch 'docs/git'
PS C:\Users\orsys\Desktop\Formation> git checkout master
Switched to branch 'master'
Your branch is up to date with 'origin/master'.
PS C:\Users\orsys\Desktop\Formation> git merge
Already up to date.
PS C:\Users\orsys\Desktop\Formation> git log --oneline --graph     
PS C:\Users\orsys\Desktop\Formation> git merge
Already up to date.
Already on 'master'
A       README.md
PS C:\Users\orsys\Desktop\Formation> git reset origin/master --hard
PS C:\Users\orsys\Desktop\Formation> git checkout docs/git
PS C:\Users\orsys\Desktop\Formation> git push -u origin docs/git
remote:
remote: Create a pull request for 'docs/git' on GitHub by visiting:
remote:      https://github.com/idireitech/Formation/pull/new/docs/git
remote:
To https://github.com/idireitech/Formation.git
 * [new branch]      docs/git -> docs/git
Branch 'docs/git' set up to track remote branch 'docs/git' from 'origin'.
PS C:\Users\orsys\Desktop\Formation> git log --oneline --graph
* e188507 (HEAD -> master, origin/master, origin/docs/git, docs/git) initial
PS C:\Users\orsys\Desktop\Formation> https://github.com/idireitech/Formation.git^C
PS C:\Users\orsys\Desktop\Formation> git add
Nothing specified, nothing added.
Maybe you wanted to say 'git add .'?
PS C:\Users\orsys\Desktop\Formation> git add .README
fatal: pathspec '.README' did not match any files
PS C:\Users\orsys\Desktop\Formation> git add .README.md
fatal: pathspec '.README.md' did not match any files
PS C:\Users\orsys\Desktop\Formation> node --version
v12.9.1
PS C:\Users\orsys\Desktop\Formation> npm --version
6.10.2
PS C:\Users\orsys\Desktop\Formation>